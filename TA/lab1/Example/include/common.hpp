#ifndef _INC_COMMON_HPP
#define _INC_COMMON_HPP

#include <cassert>
#include <iostream>
#define UNIMPLEMENTED {std::cerr << "UNIMPLEMENTED\n"; assert(false);}

#define INNER_DEBUG_COLOR "\033[32mDEBUG>:\033[0m "
#define INNER_END_DEBUG_COLOR ""
#define COLOR_DBG(str) INNER_DEBUG_COLOR str INNER_END_DEBUG_COLOR

#define INNER_ERROR_COLOR "\033[31mERROR>:\033[0m "
#define INNER_END_ERROR_COLOR ""
#define COLOR_ERR(str) INNER_ERROR_COLOR str INNER_END_ERROR_COLOR

#define INNER_WARNING_COLOR "\033[33mWARNING>:\033[0m "
#define INNER_END_WARNING_COLOR ""
#define COLOR_WRN(str) INNER_WARNING_COLOR str INNER_END_WARNING_COLOR

#define INNER_IMPORTANT_COLOR "\033[34mIMPORTANT>:\033[0m "
#define INNER_END_IMPORTANT_COLOR ""
#define COLOR_IMPORTANT(str) INNER_IMPORTANT_COLOR str INNER_END_IMPORTANT_COLOR

#endif